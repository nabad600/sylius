<?php

namespace Container2oRP5bu;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getPayPalPaymentMethodListenerService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'Sylius\PayPalPlugin\Listener\PayPalPaymentMethodListener' shared service.
     *
     * @return \Sylius\PayPalPlugin\Listener\PayPalPaymentMethodListener
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/sylius/paypal-plugin/src/Listener/PayPalPaymentMethodListener.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/paypal-plugin/src/Onboarding/Initiator/OnboardingInitiatorInterface.php';
        include_once \dirname(__DIR__, 4).'/vendor/sylius/paypal-plugin/src/Onboarding/Initiator/OnboardingInitiator.php';
        include_once \dirname(__DIR__, 4).'/vendor/symfony/security-core/Security.php';

        $a = ($container->services['router'] ?? $container->getRouterService());

        return $container->privates['Sylius\\PayPalPlugin\\Listener\\PayPalPaymentMethodListener'] = new \Sylius\PayPalPlugin\Listener\PayPalPaymentMethodListener(new \Sylius\PayPalPlugin\Onboarding\Initiator\OnboardingInitiator($a, new \Symfony\Component\Security\Core\Security(new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService, [
            'security.authorization_checker' => ['services', 'security.authorization_checker', 'getSecurity_AuthorizationCheckerService', false],
            'security.token_storage' => ['services', 'security.token_storage', 'getSecurity_TokenStorageService', false],
        ], [
            'security.authorization_checker' => '?',
            'security.token_storage' => '?',
        ])), 'https://paypal.sylius.com'), $a, ($container->privates['session.flash_bag'] ?? $container->load('getSession_FlashBagService')), ($container->privates['Sylius\\PayPalPlugin\\Provider\\PayPalPaymentMethodProviderInterface'] ?? $container->load('getPayPalPaymentMethodProviderInterfaceService')));
    }
}
